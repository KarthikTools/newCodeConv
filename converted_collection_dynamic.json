{
  "info": {
    "name": "Mobiliser_AvionRewards_RegressionSuite",
    "_postman_id": "d086d961-2bf3-43ae-b9e9-e3beff0363eb",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "LibraryFunctions",
      "description": "Test suite: LibraryFunctions",
      "item": [
        {
          "name": "SetupScriptLibrary",
          "description": "Test case: SetupScriptLibrary",
          "item": [
            {
              "name": "SetupScriptLibrary",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "// Pre-request script converted from Groovy",
                      "// This script runs before the request is sent",
                      "// Original Groovy script:",
                      "// testRunner.testCase.testSuite.project.scriptLibrary = testRunner.testCase.testSuite.project.getScriptLibrary()",
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "// Test script converted from Groovy",
                      "// This script runs after the response is received",
                      "",
                      "// Define utility classes",
                      "class GLF {",
                      "    constructor(log, context, testRunner) {",
                      "        this.log = log;",
                      "        this.context = context;",
                      "        this.testRunner = testRunner;",
                      "    }",
                      "    ",
                      "    // Function to run a test case multiple times",
                      "    runTestCaseMultipleTimes(testSuiteName, testCaseName, count) {",
                      "        try {",
                      "            console.log(`Running ${testCaseName} ${count} times`);",
                      "        } catch (e) {",
                      "            return e;",
                      "        }",
                      "    }",
                      "    ",
                      "    // Function to enable and disable a test step",
                      "    enableDisableTestStep(testStepName, enabled) {",
                      "        console.log(`Setting ${testStepName} to ${enabled ? 'enabled' : 'disabled'}`);",
                      "    }",
                      "    ",
                      "    // SignIn function",
                      "    SignInAvion(cardNumber, env) {",
                      "        console.log(`Signing in with card number: ${cardNumber} in environment: ${env}`);",
                      "        const sessionID = 'JSESSIONID=DummySessionID';",
                      "        return sessionID;",
                      "    }",
                      "    ",
                      "    // Environment functions",
                      "    MobiliserEnvType() {",
                      "        return pm.environment.get('envType');",
                      "    }",
                      "    ",
                      "    SetEndpoint(testStep) {",
                      "        const envType = this.MobiliserEnvType();",
                      "        const endpoint = 'https://mobile.sterbcroyalbank.com';",
                      "        console.log(`Setting endpoint to ${endpoint}`);",
                      "    }",
                      "    ",
                      "    TestCaseFailureCheck(testCase) {",
                      "        return true;",
                      "    }",
                      "    ",
                      "    // Logging function",
                      "    CreateLogFile(fileName) {",
                      "        console.log(`Creating log file: ${fileName}`);",
                      "        return fileName;",
                      "    }",
                      "}",
                      "",
                      "// Initialize the GLF class",
                      "const glf = new GLF(console, pm, pm);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Cookie",
                    "value": "{{JSESSIONID}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "channel",
                    "value": "WEB"
                  },
                  {
                    "key": "locale",
                    "value": "en"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ""
                  ]
                },
                "description": "Converted from Groovy script: SetupScriptLibrarySetupScriptLibrary"
              }
            }
          ]
        },
        {
          "name": "TestTemplate",
          "description": "Test case: TestTemplate",
          "item": [
            {
              "name": "FunctionLibrary",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "// Pre-request script converted from Groovy",
                      "// This script runs before the request is sent",
                      "// Original Groovy script:",
                      "// import groovy.json.JsonSlurper",
                      "import com.eviware.soapui.support.types.StringToStringMap",
                      "import com.eviware.soapui.support.XmlHolder",
                      "import groovy.sql.Sql",
                      "",
                      "class GLF {",
                      "    def log",
                      "    def context",
                      "    def testRunner",
                      "    ",
                      "    def GLF(login, contextIn, testRunnerIn) {",
                      "        this.log = login",
                      "        this.context = contextIn",
                      "        this.testRunner = testRunnerIn",
                      "    }",
                      "    ",
                      "    // Function to run a test case multiple times",
                      "    def runTestCaseMultipleTimes(testSuiteName, testCaseName, count) {",
                      "        try {",
                      "            def project = testRunner.testCase.testSuite.project",
                      "            def tcase = project.testSuites[\"${testSuiteName}\"].testCases[\"${testCaseName}\"]",
                      "            def myContext = new com.eviware.soapui.support.types.StringToObjectMap(context)",
                      "            count.times {",
                      "                tcase.run(myContext, false)",
                      "                log.info \"Running ${testCaseName} -- ${count}\"",
                      "            }",
                      "        } catch (Exception e) {",
                      "            return e",
                      "        }",
                      "    }",
                      "    ",
                      "    // Function to enable and disable a test step",
                      "    def enableDisableTestStep(testStepName, enabled) {",
                      "        def testStep = testRunner.testCase.testSteps[testStepName]",
                      "        testStep.disabled = !enabled",
                      "    }",
                      "    ",
                      "    // Data management functions",
                      "    def getDataExcel(excelFile, sheetName, rowNum, colNum) {",
                      "        def workbook = new org.apache.poi.xssf.usermodel.XSSFWorkbook(new FileInputStream(excelFile))",
                      "        def sheet = workbook.getSheet(sheetName)",
                      "        def row = sheet.getRow(rowNum)",
                      "        def cell = row.getCell(colNum)",
                      "        def value = cell.toString()",
                      "        workbook.close()",
                      "        return value",
                      "    }",
                      "    ",
                      "    // SignIn function",
                      "    def SignInAvion(cardNumber, env) {",
                      "        log.info \"Signing in with card number: ${cardNumber} in environment: ${env}\"",
                      "        def headers = new StringToStringMap()",
                      "        ",
                      "        // Set up the request",
                      "        def testSteps = context.testCase.getTestStepList()",
                      "        testSteps.each {",
                      "            if (it.config.type == \"restrequest\" && !(it.name in [\"Signin\", \"pvqvalidation\", \"WIM\"])) {",
                      "                headers.put(\"Cookie\", \"\")",
                      "                headers.put(\"Content-Type\", \"application/xml\")",
                      "                it.httpRequest.setRequestHeaders(headers)",
                      "                SetEndpoint(it)",
                      "            }",
                      "        }",
                      "        ",
                      "        // Call sign in function",
                      "        def sessionID = \"JSESSIONID=DummySessionID\" // Simulate session ID for demo",
                      "        return sessionID",
                      "    }",
                      "    ",
                      "    // Environment functions",
                      "    def MobiliserEnvType() {",
                      "        return context.expand('${#Project#envType}')",
                      "    }",
                      "    ",
                      "    def SetEndpoint(testStep) {",
                      "        def envType = MobiliserEnvType()",
                      "        def endpoint = \"https://mobile.sterbcroyalbank.com\"",
                      "        testStep.testRequest.endpoint = endpoint",
                      "    }",
                      "    ",
                      "    def TestCaseFailureCheck(testCase) {",
                      "        def result = true",
                      "        testCase.getTestStepList().each {",
                      "            if (it.assertionStatus.toString() == \"FAILED\") {",
                      "                result = false",
                      "            }",
                      "        }",
                      "        return result",
                      "    }",
                      "    ",
                      "    // Logging function",
                      "    def CreateLogFile(fileName) {",
                      "        def file = new File(fileName)",
                      "        if (!file.exists()) {",
                      "            file.createNewFile()",
                      "        }",
                      "        return file",
                      "    }",
                      "}",
                      "",
                      "",
                      "pm.request.headers.add({key: 'Cookie', value: ''});",
                      "pm.request.headers.add({key: 'Content-Type', value: 'application/xml'});"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "// Test script converted from Groovy",
                      "// This script runs after the response is received",
                      "",
                      "// Define utility classes",
                      "class GLF {",
                      "    constructor(log, context, testRunner) {",
                      "        this.log = log;",
                      "        this.context = context;",
                      "        this.testRunner = testRunner;",
                      "    }",
                      "    ",
                      "    // Function to run a test case multiple times",
                      "    runTestCaseMultipleTimes(testSuiteName, testCaseName, count) {",
                      "        try {",
                      "            console.log(`Running ${testCaseName} ${count} times`);",
                      "        } catch (e) {",
                      "            return e;",
                      "        }",
                      "    }",
                      "    ",
                      "    // Function to enable and disable a test step",
                      "    enableDisableTestStep(testStepName, enabled) {",
                      "        console.log(`Setting ${testStepName} to ${enabled ? 'enabled' : 'disabled'}`);",
                      "    }",
                      "    ",
                      "    // SignIn function",
                      "    SignInAvion(cardNumber, env) {",
                      "        console.log(`Signing in with card number: ${cardNumber} in environment: ${env}`);",
                      "        const sessionID = 'JSESSIONID=DummySessionID';",
                      "        return sessionID;",
                      "    }",
                      "    ",
                      "    // Environment functions",
                      "    MobiliserEnvType() {",
                      "        return pm.environment.get('envType');",
                      "    }",
                      "    ",
                      "    SetEndpoint(testStep) {",
                      "        const envType = this.MobiliserEnvType();",
                      "        const endpoint = 'https://mobile.sterbcroyalbank.com';",
                      "        console.log(`Setting endpoint to ${endpoint}`);",
                      "    }",
                      "    ",
                      "    TestCaseFailureCheck(testCase) {",
                      "        return true;",
                      "    }",
                      "    ",
                      "    // Logging function",
                      "    CreateLogFile(fileName) {",
                      "        console.log(`Creating log file: ${fileName}`);",
                      "        return fileName;",
                      "    }",
                      "}",
                      "",
                      "// Initialize the GLF class",
                      "const glf = new GLF(console, pm, pm);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Cookie",
                    "value": "{{JSESSIONID}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "channel",
                    "value": "WEB"
                  },
                  {
                    "key": "locale",
                    "value": "en"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ""
                  ]
                },
                "description": "Converted from Groovy script: FunctionLibraryFunctionLibrary"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "CashbackAndSaving",
      "description": "Test suite: CashbackAndSaving",
      "item": [
        {
          "name": "TC_01_TestCashbackAndSaving_2000k",
          "description": "Test case: TC_01_TestCashbackAndSaving_2000k",
          "item": [
            {
              "name": "InputData",
              "type": "properties",
              "variables": [
                {
                  "key": "CardNumber",
                  "value": "4519821569835616",
                  "enabled": true
                },
                {
                  "key": "env",
                  "value": "UAT",
                  "enabled": true
                }
              ],
              "note": "Variables defined in step 'InputData'"
            },
            {
              "name": "InSetup",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "// Pre-request script converted from Groovy",
                      "// This script runs before the request is sent",
                      "// Original Groovy script:",
                      "// import com.eviware.soapui.support.types.StringToStringMap",
                      "def env = testRunner.testCase.testSuite.project.getPropertyValue(\"env\")",
                      "def RT = new soapui.utils.FunctionLibrary(log, context, testRunner)",
                      "def fileStream = RT.CreateLogFile(\"\", testRunner.testCase.testSuite.project.getPropertyValue(\"LogFileName\"))",
                      "def cardNumber = context.expand('${#Project#CardNumber}')",
                      "def testSessionID = RT.SignInAvion(cardNumber, env)",
                      "",
                      "// Check if SignIn passed",
                      "assert RT.TestCaseFailureCheck(testRunner.testCase.testSuite.project.testSuites[\"LibraryFunctions\"].testCases[\"SetupScriptLibrary\"]) == true",
                      "",
                      "testRunner.testCase.testSuite.project.setPropertyValue(\"JSESSIONID\", testSessionID)",
                      "def headers = new StringToStringMap()",
                      "",
                      "def testSteps = context.testCase.getTestStepList()",
                      "testSteps.each {",
                      "    if (it.config.type == \"restrequest\" && !(it.name in [\"Signin\", \"pvqvalidation\", \"WIM\"])) {",
                      "        // Set headers",
                      "        headers.put(\"Cookie\", testSessionID)",
                      "        headers.put(\"Content-Type\", \"application/xml\")",
                      "        it.httpRequest.setRequestHeaders(headers)",
                      "        ",
                      "        // Set the endpoint",
                      "        RT.SetEndpoint(it)",
                      "    }",
                      "}",
                      "",
                      "// Clear header information",
                      "headers.clear()",
                      "",
                      "pm.environment.set('JSESSIONID', 'testSessionID');",
                      "pm.request.headers.add({key: 'Cookie', value: 'testSessionID'});",
                      "pm.request.headers.add({key: 'Content-Type', value: 'application/xml'});"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "// Test script converted from Groovy",
                      "// This script runs after the response is received",
                      "",
                      "// Define utility classes",
                      "class GLF {",
                      "    constructor(log, context, testRunner) {",
                      "        this.log = log;",
                      "        this.context = context;",
                      "        this.testRunner = testRunner;",
                      "    }",
                      "    ",
                      "    // Function to run a test case multiple times",
                      "    runTestCaseMultipleTimes(testSuiteName, testCaseName, count) {",
                      "        try {",
                      "            console.log(`Running ${testCaseName} ${count} times`);",
                      "        } catch (e) {",
                      "            return e;",
                      "        }",
                      "    }",
                      "    ",
                      "    // Function to enable and disable a test step",
                      "    enableDisableTestStep(testStepName, enabled) {",
                      "        console.log(`Setting ${testStepName} to ${enabled ? 'enabled' : 'disabled'}`);",
                      "    }",
                      "    ",
                      "    // SignIn function",
                      "    SignInAvion(cardNumber, env) {",
                      "        console.log(`Signing in with card number: ${cardNumber} in environment: ${env}`);",
                      "        const sessionID = 'JSESSIONID=DummySessionID';",
                      "        return sessionID;",
                      "    }",
                      "    ",
                      "    // Environment functions",
                      "    MobiliserEnvType() {",
                      "        return pm.environment.get('envType');",
                      "    }",
                      "    ",
                      "    SetEndpoint(testStep) {",
                      "        const envType = this.MobiliserEnvType();",
                      "        const endpoint = 'https://mobile.sterbcroyalbank.com';",
                      "        console.log(`Setting endpoint to ${endpoint}`);",
                      "    }",
                      "    ",
                      "    TestCaseFailureCheck(testCase) {",
                      "        return true;",
                      "    }",
                      "    ",
                      "    // Logging function",
                      "    CreateLogFile(fileName) {",
                      "        console.log(`Creating log file: ${fileName}`);",
                      "        return fileName;",
                      "    }",
                      "}",
                      "",
                      "// Initialize the GLF class",
                      "const glf = new GLF(console, pm, pm);",
                      "",
                      "pm.test('Assertion: assert RT.TestCaseFailureCheck(testRunner.testCase.testSuite.project.testSuites[\"LibraryFunctions\"].testCases[\"SetupScriptLibrary\"]) == true', function () {",
                      "    // TODO: Convert Groovy assertion to JavaScript",
                      "    // Original: assert RT.TestCaseFailureCheck(testRunner.testCase.testSuite.project.testSuites[\"LibraryFunctions\"].testCases[\"SetupScriptLibrary\"]) == true",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Cookie",
                    "value": "{{JSESSIONID}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "channel",
                    "value": "WEB"
                  },
                  {
                    "key": "locale",
                    "value": "en"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ""
                  ]
                },
                "description": "Converted from Groovy script: InSetupInSetup"
              }
            },
            {
              "name": "RunTest",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "// Pre-request script converted from Groovy",
                      "// This script runs before the request is sent",
                      "// Original Groovy script:",
                      "// def RT = new soapui.utils.FunctionLibrary(log, context, testRunner)",
                      "def env = testRunner.testCase.testSuite.project.getPropertyValue(\"env\")",
                      "",
                      "def clientCards",
                      "def CardNumber",
                      "def receiverClientCard",
                      "def testStepResult = \"\"",
                      "def fileStream = RT.CreateLogFile(\"\", testRunner.testCase.testSuite.project.getPropertyValue(\"LogFileName\"))",
                      "",
                      "// Set environment variable",
                      "testRunner.testCase.testSuite.project.setPropertyValue(\"env\", RT.MobiliserEnvType())",
                      "",
                      "// Set the client card based on environment",
                      "if (RT.MobiliserEnvType() == \"DEV\") {",
                      "    testRunner.testCase.testSuite.project.setPropertyValue(\"CardNumber\", \"4519022640754669\")",
                      "} else if (RT.MobiliserEnvType() == \"SIT\") {",
                      "    testRunner.testCase.testSuite.project.setPropertyValue(\"CardNumber\", \"4519835555858010\")",
                      "} else if (RT.MobiliserEnvType() == \"UAT\") {",
                      "    testRunner.testCase.testSuite.project.setPropertyValue(\"CardNumber\", \"4519891586948663\")",
                      "}",
                      "",
                      "def recordResult = \"PASS\"",
                      "def TSID = \"\"",
                      "",
                      "pm.environment.set('env', 'RT.MobiliserEnvType(');",
                      "pm.environment.set('CardNumber', '4519022640754669');",
                      "pm.environment.set('CardNumber', '4519835555858010');",
                      "pm.environment.set('CardNumber', '4519891586948663');"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "// Test script converted from Groovy",
                      "// This script runs after the response is received",
                      "",
                      "// Define utility classes",
                      "class GLF {",
                      "    constructor(log, context, testRunner) {",
                      "        this.log = log;",
                      "        this.context = context;",
                      "        this.testRunner = testRunner;",
                      "    }",
                      "    ",
                      "    // Function to run a test case multiple times",
                      "    runTestCaseMultipleTimes(testSuiteName, testCaseName, count) {",
                      "        try {",
                      "            console.log(`Running ${testCaseName} ${count} times`);",
                      "        } catch (e) {",
                      "            return e;",
                      "        }",
                      "    }",
                      "    ",
                      "    // Function to enable and disable a test step",
                      "    enableDisableTestStep(testStepName, enabled) {",
                      "        console.log(`Setting ${testStepName} to ${enabled ? 'enabled' : 'disabled'}`);",
                      "    }",
                      "    ",
                      "    // SignIn function",
                      "    SignInAvion(cardNumber, env) {",
                      "        console.log(`Signing in with card number: ${cardNumber} in environment: ${env}`);",
                      "        const sessionID = 'JSESSIONID=DummySessionID';",
                      "        return sessionID;",
                      "    }",
                      "    ",
                      "    // Environment functions",
                      "    MobiliserEnvType() {",
                      "        return pm.environment.get('envType');",
                      "    }",
                      "    ",
                      "    SetEndpoint(testStep) {",
                      "        const envType = this.MobiliserEnvType();",
                      "        const endpoint = 'https://mobile.sterbcroyalbank.com';",
                      "        console.log(`Setting endpoint to ${endpoint}`);",
                      "    }",
                      "    ",
                      "    TestCaseFailureCheck(testCase) {",
                      "        return true;",
                      "    }",
                      "    ",
                      "    // Logging function",
                      "    CreateLogFile(fileName) {",
                      "        console.log(`Creating log file: ${fileName}`);",
                      "        return fileName;",
                      "    }",
                      "}",
                      "",
                      "// Initialize the GLF class",
                      "const glf = new GLF(console, pm, pm);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Cookie",
                    "value": "{{JSESSIONID}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "channel",
                    "value": "WEB"
                  },
                  {
                    "key": "locale",
                    "value": "en"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ""
                  ]
                },
                "description": "Converted from Groovy script: RunTestRunTest"
              }
            },
            {
              "name": "summary",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Cookie",
                    "value": "{{JSESSIONID}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "channel",
                    "value": "WEB"
                  },
                  {
                    "key": "locale",
                    "value": "en"
                  },
                  {
                    "key": "clientIdType",
                    "value": "CLIENT_CARD_NUM"
                  },
                  {
                    "key": "requestId",
                    "value": "88847be1-40f0-40d3-9125-1a9d059ed316"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": "Converted from ReadyAPI",
                "url": {
                  "raw": "https://mobile.sterbcroyalbank.com",
                  "protocol": "https",
                  "host": [
                    "mobile",
                    "sterbcroyalbank",
                    "com"
                  ],
                  "path": []
                }
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "// Test script for summary request",
                      "pm.test('Status code is 200', function() {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                }
              ],
              "response": []
            },
            {
              "name": "InputData",
              "type": "properties",
              "variables": [
                {
                  "key": "CardNumber",
                  "value": "4519821569835616",
                  "enabled": true
                },
                {
                  "key": "env",
                  "value": "UAT",
                  "enabled": true
                }
              ],
              "note": "Variables defined in step 'InputData'"
            }
          ]
        }
      ]
    },
    {
      "name": "API Endpoints",
      "description": "Collection of all API endpoints from the ReadyAPI project",
      "item": [
        {
          "name": "Mobiliser - MobileSignIn",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/xml"
              }
            ],
            "url": {
              "raw": "https://mobile.sterbcroyalbank.com/service/rbc/MobileSignIn",
              "protocol": "https",
              "host": [
                "mobile",
                "sterbcroyalbank",
                "com"
              ],
              "path": [
                "service",
                "rbc",
                "MobileSignIn"
              ]
            },
            "description": "Converted from ReadyAPI REST request",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            }
          }
        },
        {
          "name": "Mobiliser - search",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "https://mobile.sterbcroyalbank.com/ps/mobiliser/RewardsChannelInteractions/v1/offers/search",
              "protocol": "https",
              "host": [
                "mobile",
                "sterbcroyalbank",
                "com"
              ],
              "path": [
                "ps",
                "mobiliser",
                "RewardsChannelInteractions",
                "v1",
                "offers",
                "search"
              ]
            },
            "description": "Converted from ReadyAPI REST request",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          }
        },
        {
          "name": "Mobiliser - accounts",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "https://mobile.sterbcroyalbank.com/ps/mobiliser/RewardsChannelInteractions/v1/loyalty/profile/accounts",
              "protocol": "https",
              "host": [
                "mobile",
                "sterbcroyalbank",
                "com"
              ],
              "path": [
                "ps",
                "mobiliser",
                "RewardsChannelInteractions",
                "v1",
                "loyalty",
                "profile",
                "accounts"
              ]
            },
            "description": "Converted from ReadyAPI REST request",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          }
        },
        {
          "name": "Mobiliser - summary",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "https://mobile.sterbcroyalbank.com/ps/mobiliser/RewardsChannelInteractions/v1/offers/commission/summary",
              "protocol": "https",
              "host": [
                "mobile",
                "sterbcroyalbank",
                "com"
              ],
              "path": [
                "ps",
                "mobiliser",
                "RewardsChannelInteractions",
                "v1",
                "offers",
                "commission",
                "summary"
              ]
            },
            "description": "Converted from ReadyAPI REST request",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          }
        },
        {
          "name": "PVQ Encrypt - encrypt",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "https://crosswordencrypter.apps.cf2.devfg.rbc.com/api/crossword/v1/encrypt",
              "protocol": "https",
              "host": [
                "crosswordencrypter",
                "apps",
                "cf2",
                "devfg",
                "rbc",
                "com"
              ],
              "path": [
                "api",
                "crossword",
                "v1",
                "encrypt"
              ]
            },
            "description": "Converted from ReadyAPI REST request",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          }
        },
        {
          "name": "MFA - initiate",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "https://apigw.istrbc.com/ZV60/MFA-PublicService/v1/challenge/initiate",
              "protocol": "https",
              "host": [
                "apigw",
                "istrbc",
                "com"
              ],
              "path": [
                "ZV60",
                "MFA-PublicService",
                "v1",
                "challenge",
                "initiate"
              ]
            },
            "description": "Converted from ReadyAPI REST request",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          }
        },
        {
          "name": "MFA - validate",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "https://apigw.istrbc.com/ZV60/MFA-PublicService/v1/challenge/validate",
              "protocol": "https",
              "host": [
                "apigw",
                "istrbc",
                "com"
              ],
              "path": [
                "ZV60",
                "MFA-PublicService",
                "v1",
                "challenge",
                "validate"
              ]
            },
            "description": "Converted from ReadyAPI REST request",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          }
        },
        {
          "name": "Mobiliser - WasitMeWasItNotMe",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/xml"
              }
            ],
            "url": {
              "raw": "https://mobile.sterbcroyalbank.com/service/rbc/WasitMeWasItNotMe",
              "protocol": "https",
              "host": [
                "mobile",
                "sterbcroyalbank",
                "com"
              ],
              "path": [
                "service",
                "rbc",
                "WasitMeWasItNotMe"
              ]
            },
            "description": "Converted from ReadyAPI REST request",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            }
          }
        },
        {
          "name": "Mobiliser - PVQValidation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/xml"
              }
            ],
            "url": {
              "raw": "https://mobile.sterbcroyalbank.com/service/rbc/PVQValidation",
              "protocol": "https",
              "host": [
                "mobile",
                "sterbcroyalbank",
                "com"
              ],
              "path": [
                "service",
                "rbc",
                "PVQValidation"
              ]
            },
            "description": "Converted from ReadyAPI REST request",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script",
          "// This script runs before every request in the collection",
          "",
          "// Set up common headers",
          "if (!pm.request.headers.has('Content-Type')) {",
          "    pm.request.headers.add({key: 'Content-Type', value: 'application/json'});",
          "}",
          "",
          "// Set up authentication if needed",
          "if (pm.environment.get('AccessToken')) {",
          "    pm.request.headers.add({key: 'Authorization', value: `Bearer ${pm.environment.get('AccessToken')}`});",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script",
          "// This script runs after every request in the collection",
          "",
          "// Log response time",
          "console.log(`Response time: ${pm.response.responseTime}ms`);",
          "",
          "// Check for common errors",
          "if (pm.response.code === 401) {",
          "    console.error('Authentication error. Check your AccessToken.');",
          "} else if (pm.response.code === 403) {",
          "    console.error('Authorization error. Check your permissions.');",
          "} else if (pm.response.code === 500) {",
          "    console.error('Server error. Please try again later.');",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://mobile.sterbcroyalbank.com",
      "type": "string"
    }
  ]
}